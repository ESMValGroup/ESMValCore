---
version: 2.1

orbs:
  coverage-reporter: codacy/coverage-reporter@11.4.1
  codecov: codecov/codecov@1.2.3

commands:
  check_changes:
    steps:
      - run: |
          if (test "$CIRCLE_BRANCH" = main ||
            git --no-pager diff --name-only origin/main... |
            grep -q -E -f .circleci/install_triggers)
          then
            echo Running installation tests
          else
            echo Skipping installation tests
            circleci step halt
          fi
  upload_test_results:
    steps:
      - run:
          name: Merge test reports
          command: |
            pip install junitparser
            mkdir -p test-reports
            junitparser merge report-*.xml test-reports/report.xml
      - store_test_results:
          path: test-reports/
      - store_artifacts:
          path: /logs
      - run:
          name: Compress pytest artifacts
          command: tar -cvzf pytest.tar.gz -C /tmp/pytest-of-root/pytest-0/ .
      - store_artifacts:
          path: pytest.tar.gz
      - run:
          name: Compress test-report artifacts
          command: tar -cvzf test-reports.tar.gz test-reports/
      - store_artifacts:
          path: test-reports.tar.gz

jobs:
  run_tests:
    # Run tests
    working_directory: /test
    docker:
      - image: esmvalgroup/esmvalcore:development
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          key: test-{{ .Branch }}
      - run:
          name: Install dependencies
          command: |
            . /opt/conda/etc/profile.d/conda.sh
            mkdir /logs
            conda activate esmvaltool
            pip install .[test] > /logs/install.txt 2>&1
      - run:
          name: Run tests
          command: |
            pytest -n 4 -m "not sequential" --junitxml=report-1.xml
            pytest -n 0 -m "sequential" --cov-append --junitxml=report-2.xml
      - upload_test_results
      - save_cache:
          key: test-{{ .Branch }}
          paths:
            - ".eggs"
            - ".pytest_cache"
      - run:
          # Install curl for codecov upload
          when: always
          command: apt update && apt install -y curl
      - codecov/upload:
          when: always
          file: 'test-reports/coverage.xml'
      - coverage-reporter/send_report:
          coverage-reports: 'test-reports/coverage.xml'
          project-token: $CODACY_PROJECT_TOKEN
          skip: true  # skip if project-token is not defined (i.e. on a fork)

  test_installation_from_source_test_mode:
    # Test installation
    working_directory: /install
    docker:
      - image: condaforge/mambaforge
    resource_class: large
    steps:
      - checkout
      - check_changes
      - restore_cache:
          key: install-{{ .Branch }}
      - run:
          name: Install dependencies
          command: |
            . /opt/conda/etc/profile.d/conda.sh
            set -x
            mkdir /logs
            # Pin Python version for faster environment solve
            echo "  - python=3.10" >> environment.yml
            # Add additional requirements for running all tests
            echo "
              - r-base
              - r-yaml
              - ncl
            " >> environment.yml
            # Install
            mamba env create >> /logs/conda.txt 2>&1
            set +x; conda activate esmvaltool; set -x
            pip install .[test] > /logs/install.txt 2>&1
            # Log versions
            dpkg -l > /logs/versions.txt
            conda env export > /logs/environment.yml
            pip freeze > /logs/requirements.txt
      - run:
          name: Run tests
          command: |
            # Test installation
            pytest -n 4 -m "not sequential" --junitxml=report-1.xml
            pytest -n 0 -m "sequential" --junitxml=report-2.xml
            esmvaltool version
      - upload_test_results
      - save_cache:
          key: install-{{ .Branch }}
          paths:
            - "/opt/conda/pkgs"
            - ".eggs"
            - ".pytest_cache"

  build_documentation:
    # Test building documentation
    working_directory: /doc
    docker:
      - image: condaforge/mambaforge
    resource_class: small
    steps:
      - checkout
      - run:
          command: |
            mkdir /logs
            . /opt/conda/etc/profile.d/conda.sh
            # Install
            mamba env create
            conda activate esmvaltool
            pip install .[doc]
            # Log versions
            dpkg -l > /logs/versions.txt
            conda env export > /logs/environment.yml
            pip freeze > /logs/requirements.txt
            # Test building documentation
            MPLBACKEND=Agg sphinx-build -W doc doc/build
      - store_artifacts:
          path: /logs

  test_installation_from_source_develop_mode:
    # Test development installation
    working_directory: /develop
    docker:
      - image: condaforge/mambaforge
    resource_class: large
    steps:
      - checkout
      - check_changes
      - run:
          name: Install dependencies
          command: |
            . /opt/conda/etc/profile.d/conda.sh
            mkdir /logs
            # Pin Python version for faster environment solve
            echo "  - python=3.10" >> environment.yml
            # Add additional requirements for running all tests
            echo "
              - r-base
              - r-yaml
              - ncl
            " >> environment.yml
            # Install
            mamba env create >> /logs/conda.txt 2>&1
            conda activate esmvaltool
            pip install -e .[develop] > /logs/install.txt 2>&1
            # Log versions
            dpkg -l > /logs/versions.txt
            conda env export > /logs/environment.yml
            pip freeze > /logs/requirements.txt
      - run:
          name: Run tests
          command: |
            esmvaltool version
            pytest -n 4 -m "not sequential" --junitxml=report-2.xml
            pytest -n 0 -m "sequential" --junitxml=report-2.xml
      - upload_test_results

  test_installation_from_conda:
    # Test conda package installation
    working_directory: /esmvaltool
    docker:
      - image: condaforge/mambaforge
    resource_class: small
    steps:
      - run:
          command: |
            . /opt/conda/etc/profile.d/conda.sh
            set -x
            # Install prerequisites
            mkdir /logs
            # conda update -y conda > /logs/conda.txt 2>&1
            # Create and activate conda environment
            mamba create -y --name esmvaltool 'python=3.10'
            set +x; conda activate esmvaltool; set -x
            # Install
            mamba install -y esmvalcore
            # Log versions
            conda env export > /logs/environment.yml
            # Test installation
            esmvaltool version

workflows:
  commit:
    jobs:
      - run_tests
      - test_installation_from_source_test_mode
      - test_installation_from_source_develop_mode

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - run_tests
      - test_installation_from_source_test_mode
      - build_documentation
      - test_installation_from_source_develop_mode
      - test_installation_from_conda
