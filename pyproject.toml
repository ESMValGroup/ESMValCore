[build-system]
requires = [
    "setuptools >= 40.6.0",
    "setuptools_scm>=6.2",
]
build-backend = "setuptools.build_meta"

[project]
authors = [
    {name = "ESMValTool Development Team", email = "esmvaltool-dev@listserv.dfn.de"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Hydrology",
    "Topic :: Scientific/Engineering :: Physics",
]
dynamic = [
    "readme",
    "version",
]
dependencies = [
    "cartopy",
    "cf-units",
    "dask[array,distributed]!=2024.8.0",  # ESMValCore/issues/2503
    "dask-jobqueue",
    "esgf-pyclient>=0.3.1",
    "esmf-regrid>=0.11.0",
    "esmpy",  # not on PyPI
    "filelock",
    "fiona",
    "fire",
    "geopy",
    "humanfriendly",
    "iris-grib>=0.20.0",  # github.com/ESMValGroup/ESMValCore/issues/2535
    "isodate>=0.7.0",
    "jinja2",
    "nc-time-axis",  # needed by iris.plot
    "nested-lookup",
    "netCDF4",
    "numpy!=1.24.3",
    "packaging",
    "pandas",
    "pillow",
    "prov",
    "psutil",
    "py-cordex",
    "pybtex",
    "pyyaml",
    "requests",
    "scipy>=1.6",
    "scitools-iris>=3.11",  # 3.11 first to support Numpy 2 and Python 3.13
    "shapely>=2.0.0",
    "stratify>=0.3",
    "yamale",
]
description = "A community tool for pre-processing data from Earth system models in CMIP and running analysis scripts"
license = {text = "Apache License, Version 2.0"}
name = "ESMValCore"
requires-python = ">=3.10"

[project.optional-dependencies]
test = [
    "pytest>6.0.0",
    "pytest-cov>=2.10.1",
    "pytest-env",
    "pytest-html!=2.1.0",
    "pytest-metadata>=1.5.1",
    "pytest-mock",
    "pytest-xdist",
    "ESMValTool_sample_data==0.0.3",
]
doc = [
    "autodocsumm>=0.2.2",
    "ipython",
    "nbsphinx",
    "sphinx>=6.1.3",
    "pydata_sphinx_theme",
]
develop = [
    "esmvalcore[test,doc]",
    "pre-commit",
    "pylint",
    "pydocstyle",
    "vprof",
]

[project.scripts]
esmvaltool = "esmvalcore._main:run"

[project.urls]
Code = "https://github.com/ESMValGroup/ESMValCore"
Community = "https://github.com/ESMValGroup/Community"
Documentation = "https://docs.esmvaltool.org"
Homepage = "https://esmvaltool.org"
Issues = "https://github.com/ESMValGroup/ESMValCore/issues"

[tool.setuptools]
include-package-data = true
license-files = ["LICENSE"]
packages = ["esmvalcore"]
zip-safe = false

[tool.setuptools.dynamic]
readme = {file = "README.md", content-type = "text/markdown"}

[tool.setuptools_scm]
version_scheme = "release-branch-semver"

# Configure tests

[tool.pytest.ini_options]
addopts = [
    "-ra",
    "--strict-config",
    "--strict-markers",
    "--doctest-modules",
    "--ignore=esmvalcore/cmor/tables/",
    "--cov-report=xml:test-reports/coverage.xml",
    "--cov-report=html:test-reports/coverage_html",
    "--html=test-reports/report.html",
]
log_cli_level = "INFO"
env = {MPLBACKEND = "Agg"}
log_level = "WARNING"
minversion = "6"
markers = [
    "installation: Test requires installation of dependencies",
    "use_sample_data: Run functional tests using real data",
]
testpaths = ["tests"]
xfail_strict = true

[tool.coverage.run]
parallel = true
source = ["esmvalcore"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

# Configure type checks

[tool.mypy]
# See https://mypy.readthedocs.io/en/stable/config_file.html
ignore_missing_imports = true
enable_error_code = [
    "truthy-bool",
]

# Configure linters

[tool.codespell]
skip = "*.ipynb,esmvalcore/config/extra_facets/ipslcm-mappings.yml"
ignore-words-list = "vas,hist,oce"

[tool.ruff]
line-length = 79
[tool.ruff.lint]
select = [
    "B",
    "D",       # pydocstyle
    "E",       # pycodestyle
    "F",       # pyflakes
    "I",       # isort
    "ISC001",  # pycodestyle
    "W",       # pycodestyle
]
ignore = [
    "E501",  # Disable line-too-long as this is taken care of by the formatter.
    "D105",  # Disable Missing docstring in magic method as these are well defined.
]
[tool.ruff.lint.per-file-ignores]
"tests/**.py" = [
    "B011",  # `assert False` is valid test code.
    # Docstrings in tests are only needed if the code is not self-explanatory.
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
]
[tool.ruff.lint.isort]
known-first-party = ["esmvalcore"]
[tool.ruff.lint.pydocstyle]
convention = "numpy"

# Configure linters that are run by Prospector
# TODO: remove once we have enabled all ruff rules for the tools provided by
# Prospector, see https://github.com/ESMValGroup/ESMValCore/issues/2528.

[tool.pylint.main]
jobs = 1  # Running more than one job in parallel crashes prospector.
ignore-paths = [
    "doc/conf.py",  # Sphinx configuration file
]
[tool.pylint.basic]
good-names = [
    "_",            # Used by convention for unused variables
    "i", "j", "k",  # Used by convention for indices
    "logger",       # Our preferred name for the logger
]
[tool.pylint.format]
max-line-length = 79
[tool.pylint."messages control"]
disable = [
    "import-error",      # Needed because Codacy does not install dependencies
    "file-ignored",      # Disable messages about disabling checks
    "line-too-long",     # Disable line-too-long as this is taken care of by the formatter.
    "locally-disabled",  # Disable messages about disabling checks
]

[tool.pydocstyle]
convention = "numpy"
