###############################################################################
# User's configuration file for the ESMValTool
###############################################################################
---

# Diagnostics create plots? [true]/false
write_plots: true
# Diagnostics write NetCDF files? [true]/false
write_netcdf: true
# Set the console log level debug, [info], warning, error
log_level: info
# Exit on warning (only for NCL diagnostic scripts)? true/[false]
exit_on_warning: false
# Plot file format? [png]/pdf/ps/eps/epsi
output_file_type: png
# Destination directory
output_dir: ./esmvaltool_output
# Auxiliary data directory (used for some additional datasets)
auxiliary_data_dir: ./auxiliary_data
# Use netCDF compression true/[false]
compress_netcdf: false
# Save intermediary cubes in the preprocessor true/[false]
save_intermediary_cubes: false
# Remove the preproc dir if all fine
remove_preproc_dir: true
# Run at most this many tasks in parallel [null]/1/2/3/4/..
# Set to null to use the number of available CPUs.
# If you run out of memory, try setting max_parallel_tasks to 1 and check the
# amount of memory you need for that by inspecting the file
# run/resource_usage.txt in the output directory. Using the number there you
# can increase the number of parallel tasks again to a reasonable number for
# the amount of memory available in your system.
max_parallel_tasks: null
# Path to custom config-developer file, to customise project configurations.
# See config-developer.yml for an example. Set to None to use the default
config_developer_file: null
# Get profiling information for diagnostics
# Only available for Python diagnostics
profile_diagnostic: false

CMIP6:
  output_file: '{project}_{dataset}_{mip}_{exp}_{ensemble}_{short_name}'
  data:
    - rootpath: ~/data/CMIP6
      input_dir: ''
      input_file: '{short_name}_{mip}_{dataset}_{exp}_{ensemble}_{grid}*.nc'

CMIP5:
  output_file: '{project}_{dataset}_{mip}_{exp}_{ensemble}_{short_name}'
  data:
    - rootpath: ~/data/CMIP5
      input_dir: ''
      input_file: '{short_name}_{mip}_{dataset}_{exp}_{ensemble}*.nc'

CMIP3:
  output_file: '{project}_{institute}_{dataset}_{mip}_{exp}_{ensemble}_{short_name}_{start_year}-{end_year}'
  data:
    - rootpath: ~/data/CMIP3
      input_dir: ''
      input_file: '{short_name}_*.nc'

OBS:
  output_file: '{project}_{dataset}_{type}_{version}_{mip}_{short_name}'
  data:
    - rootpath: ~/data/OBS
      input_dir: 'Tier{tier}/{dataset}'
      input_file: '{project}_{dataset}_{type}_{version}_{mip}_{short_name}[_.]*nc'

OBS6:
  output_file: '{project}_{dataset}_{type}_{version}_{mip}_{short_name}'
  data:
    - rootpath: ~/data/OBS6
      input_dir: 'Tier{tier}/{dataset}'
      input_file: '{project}_{dataset}_{type}_{version}_{mip}_{short_name}[_.]*nc'

native6:
  output_file: '{project}_{dataset}_{type}_{version}_{mip}_{short_name}'
  data:
    - rootpath: ~/data/native6
      input_dir: 'Tier{tier}/{dataset}/{latestversion}/{frequency}/{short_name}'
      input_file: '*.nc'

obs4mips:
  output_file: '{project}_{dataset}_{level}_{version}_{short_name}'
  data:
    - rootpath: ~/data/obs4mips
      input_dir: 'Tier{tier}/{dataset}'
      input_file: '{short_name}_{dataset}_{level}_{version}_*.nc'

ana4mips:
  output_file: '{project}_{mip}_{type}_{dataset}_{short_name}'
  data:
    - rootpath: ~/data/ana4mips
      input_dir: 'Tier{tier}/{dataset}'
      input_file: '{short_name}_{mip}_{type}_{dataset}_*.nc'

EMAC:
  output_file: '{dataset}_{ensemble}_{short_name}'
  data:
    - rootpath: ~/data/EMAC
      input_dir: '{dataset}'
      input_file: ''

CORDEX:
  output_file: '{short_name}_{dataset}_{exp}_{ensemble}_{rcm_version}_{mip}'
  data:
    - rootpath: ~/data/CORDEX
      input_dir: ''
      input_file: '{short_name}_{domain}_{driver}_{exp}_{ensemble}_{dataset}_{rcm_version}_{mip}*.nc'
