# this workflow was tuned using this resource
# https://dev.to/zirkelc/trigger-github-workflow-for-comment-on-pull-request-45l2

name: Test via PR Comment v2
on:
  issue_comment:
    types: [created]

# Required shell entrypoint to have properly configured bash shell
defaults:
  run:
    shell: bash -l {0}

jobs:
  linux:
    # this detects if comment is on a PR and if it contains the trigger word "runGAtests"
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, 'runGAtests') }}
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
      fail-fast: false
    name: Linux Python ${{ matrix.python-version }}
    steps:
      # this bit detects what branch the tests should run on
      # without it tests run amok on all PRs
      - name: Get correct PR branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch
      # this bit will make the test appear on the PR webpage
      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending
      - name: Checkout correct PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}
          fetch-depth: 0
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: esmvalcore
          environment-file: environment.yml
          python-version: ${{ matrix.python-version }}
          miniforge-version: "latest"
          miniforge-variant: Mambaforge
          use-mamba: true
      - run: mkdir -p test_linux_artifacts_python_${{ matrix.python-version }}
      - run: conda --version 2>&1 | tee test_linux_artifacts_python_${{ matrix.python-version }}/conda_version.txt
      - run: python -V 2>&1 | tee test_linux_artifacts_python_${{ matrix.python-version }}/python_version.txt
      - run: pip install -e .[develop] 2>&1 | tee test_linux_artifacts_python_${{ matrix.python-version }}/install.txt
      - run: flake8
      - run: pytest
      - name: Upload artifacts
        if: ${{ always() }}  # upload artifacts even if fail
        uses: actions/upload-artifact@v2
        with:
          name: Test_Linux_python_${{ matrix.python-version }}
          path: test_linux_artifacts_python_${{ matrix.python-version }}
